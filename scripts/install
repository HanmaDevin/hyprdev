#! /bin/bash

install_packages() {
  sudo pacman -Syu
  packages=("zip" "fastfetch" "hyprland" "hyprpaper" "grub" "os-prober" "hyprlock" "wofi" "waybar" "ntfs-3g" "tree" "discord" "lazygit" "ufw" "zsh" "unzip" "wget" "stow" "curl" "yazi" "hyprpolkitagent" "neovim" "eza" "btop" "gamemode" "steam" "mangohud" "zoxide" "fzf" "bat" "wezterm" "geany" "geany-plugins" "tmux" "jdk23-openjdk" "docker" "ripgrep" "cargo" "fd" "sddm" "starship" "okular" "celluloid" "xclip" "hypridle" "pinta" "bluez" "bluez-utils" "networkmanager" "brightnessctl" "wine" "thunderbird" "nwg-look" "thunar" "bluez-obex" "python-pip" "python-requests" "python-pipx" "pavucontrol" "openssh" "pam-u2f" "pipewire-jack" "pipewire" "pactl" "pamixer" "ttf-font-awesome" "ttf-nerd-fonts-symbols" "ttf-jetbrains-mono-nerd" "noto-fonts-emoji" "7zip" "wireplumber" "libfido2" "qt5-wayland" "qt6-wayland" "calc" "udiskie" "gnome-keyring" "piper")

  for package in "${packages[@]}"; do
	sudo pacman -S "$package" --noconfirm || { echo "Failed to install $package"; }
  done
}

detect_nvidia() {
  gpu=$(lspci | grep -i '.* vga .* nvidia .*')

  shopt -s nocasematch

  if [[ $gpu == *' nvidia '* ]]; then
    echo "Nvidia GPU is present"
    echo "Downloading nvidia drivers..."
    sudo pacman -S --noconfirm nvidia nvidia-utils nvidia-settings
  else
    echo "It seems you are not using a Nvidia GPU"
    echo "If you have a Nvidia GPU then download the drivers yourself please :)"
  fi
}

config_ufw() {
  sudo ufw enable
  sudo ufw default deny incoming
  sudo ufw default allow outgoing
  sudo ufw status verbose
}

copy_config() {
  cp "$HOME/hyprdev/.zshrc" "$HOME/"
  cp "$HOME/hyprdev/.wezterm.lua" "$HOME/"
  cp -r "$HOME/hyprdev/.config" "$HOME/"
  cp -r "$HOME/hyprdev/Pictures/Wallpaper/" "$HOME/Pictures/"
  sudo cp -r "$HOME/hyprdev/sddm/catppuccin-mocha/" "/usr/share/sddm/themes/"
  sudo cp -r "$HOME/hyprdev/Icons/Catppuccin-Mocha/" "/usr/share/icons/"
  sudo cp "$HOME/hyprdev/sddm/sddm.conf" "/etc/"
  cp "$HOME/hyprdev/nwg-look/gsettings" "$HOME/.local/share/nwg-look/"
  read -r -p "Are you using a Laptop? (y/n)" laptop
  if [[ $laptop == "y" ]]; then
    cp "$HOME/hyprdev/scripts/battery.sh" "$HOME/.config/hypr/"
  fi

  if [[ ! -d "/usr/share/grub/" ]]; then
    sudo mkdir -p "/usr/share/grub/"
  fi
  sudo cp -r "$HOME/hyprdev/grub/themes/" "/usr/share/grub/"
  sudo cp "$HOME/hyprdev/grub/grub" "/etc/default/grub"
  if [[ ! -d "/boot/grub" ]]; then
    sudo mkdir -p "/boot/grub/"
  fi
  sudo grub-mkconfig -o /boot/grub/grub.cfg
}

install_yay(){
  sudo pacman -S --needed git base-devel && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si
}

configure_git() {
  read -r -p "Want to configure git? (y/n): " gitconfig
  if [[ $gitconfig == "y" ]]; then
    read -r -p "What is your GitHub username? " username
    git config --global user.name "$username"
    read -r -p "What is your email address? " useremail
    git config --global user.email "$useremail"
    git config --global pull.rebase true
  fi
  
  read -r -p "Want to create a ssh key? (y/n): " ssh
  if [[ $ssh == "y" ]]; then
    ssh-keygen -t ed25519 -C "$useremail"
  fi

  read -r -p "Want to create a physical key? (y/n): " key
  read -r -p "Insert a key and press enter..." 
  if [[ $key == "y" ]]; then
    ssh-keygen -t ecdsa-sk -b 521
  fi
}


install_themes() {
  sudo cp -r "$HOME/hyprdev/Cursor/Bibata-Modern-Ice" "/usr/share/icons"
  
  echo "Installing Vencord..."

  bash "$HOME/hyprdev/Vencord/VencordInstaller.sh"

  cp -r "$HOME/hyprdev/Vencord/themes/" "$HOME/.config/Vencord/"

  echo "Done!"

}

add_tmux_tpm() {
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
  mkdir -p ~/.config/tmux/plugins/catppuccin 
  git clone -b v2.1.2 https://github.com/catppuccin/tmux.git ~/.config/tmux/plugins/catppuccin/tmux
}

install_packages
detect_nvidia
configure_git

config_ufw

if [[ ! -d "$HOME/Pictures/Screenshots/" ]]; then 
  mkdir -p "$HOME/Pictures/Screenshots/"
fi

if [[ ! -d "$HOME/.local/share/nwg-look/" ]]; then 
  mkdir -p "$HOME/.local/share/nwg-look/"
fi

if [[ -d "$HOME/.config/nvim" ]]; then 
  cp -r "$HOME/.config/nvim" "$HOME/.config/nvim-bak"
  rm -r "$HOME/.config/nvim"
fi


copy_config
install_themes
add_tmux_tpm

echo "Creating work directory"
mkdir -p "$HOME/Documents/Github/Projects"
echo "Done"
    
install_yay

echo "Installing packages from yay"
yay -S --noconfirm $(cat "$HOME/hyprdev/yay-packages.txt")
echo "Finished!"

cat "$HOME/.ssh/id_ed25519.pub"
nwg-look -a

chsh -s /bin/zsh 

systemctl enable sddm 
systemctl enable NetworkManager
systemctl enable bluetooth

systemctl start bluetooth
systemctl start NetworkManager

echo "Installing nvm..."
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash

echo "Now you are ready to reboot"
